Hello guys, a new version of agent 0 is being released so let's jump into the updates. The biggest one being the new web UI prototype. So let's start there. I'll tell my agent to create an Ethereum address starting with 3 zeros and give me the key and the address. 

First, I will see this blue message box with the agent generating these instructions. I can see he wants to use the code execution tool with a code and I can see his thoughts and I can still see the original JSON, the LLM as generated if I want to. 

Now, the next box is the agent using the code execution tool based on these instructions. I can see the python code for generating private keys and addresses from private keys until he finds one starting with 3 zeros and I can see the output from the code execution tool. The agent then gives the output generates another message. This time he wants to use the response tool to send response to me as his superior and he sends me a message containing the Ethereum address with 3 zeros and the private key as well. And because the agent is still running in the background just like before, I can see this output as well as the log being stored in the logs folder as before. And pausing an intervention through it so I can tell my agent analyze files in the root folder and then I tell him to stop it. The agent will receive my message and stop what he was doing and records back. Then I can tell him, continue. I can even pause and resume him at any time using this pause and resume button in the corner. Some core files in the project have changed. For example, the main.py file is gone. It has been split into two run CLIP and run UI.

 If you want to run your agent like before, you can run the Python run CLIP and whoever just as before, if you want to run the new UI, you can run the Python run UI or pie. It was not a flash server show you the address. If you click on the address, it will open the web UI in your browser where you can interact with your agent. The setup from main.py file has been moved into initialize of py file and this one works for both the CLI and UI version. If you want to change your model for chat, embedding or configure any of the runtime parameters, you can now do it in the initialize of py file. The next update is in the prompts directory. Now it has subfolders or the default prompts have been moved to default subfolder. Here in the initialize of py file, you can select prompt subfolder you want to use for your agent. If you want to experiment with various prompts, you can create as many custom subfolders as you want. Just by copying or creating a file named exactly like one of the files in the default folder, it will override that file and your agent will use the file from your custom folder instead of the default one. You don't have to copy all of the files, you just have to copy the files you want to change and you make your changes only in the custom subfolder. Save it, tell your agent to use the custom subfolder in the initialize.py file and you're good to go. The vector database used by the memory tool has been changed from chroma to face to fix a bug when searching with a score threshold and to improve overall quality. A new memory feature is the knowledge folder in the project directory where you can put your documents you want to import into the agent memory automatically. If you want to have a persistent knowledge base, you can put your files into the knowledge folder and they will be automatically imported into the agent when the directory starts. Right now, text PDF, CSV, HTML, JSON and markdown files are supported, but I suppose this list will grow in the future. When I tried with my agent, the first time the memory is initialized, I get a message that one knowledge file has been found in the knowledge folder and that 89 documents have been split from that file and I asked my agent a question for something that is in the chemistry book I imported and he was able to get the answer for me. And both the memory and the knowledge support subdirectories, so if you want to experiment and you want to specify various subdirectories to keep things organized, you can do it in the initialize.py file. For both the prompts, memory and knowledge, I would like the agent to have the option to choose the folder himself in the future. So for example, when one agent creates subordinate agent, you would be able to give in different folders to, for example, fit his role or whatever the developer sees fit. For the next version, so I would like to improve on the UI, add more configurations to the panel on the left and also add more options and features to the chat window itself. And probably add speech to text and text to speech, which as well so that the agent would be able to periodically report what is he working on with his voice, he would be able to talk to your agent, he would be able to answer back in the end when the task is done. I would also like to improve on the memory features, add more layers to it, some managed automatically based on composition history, some managed manually by the agent like keys and passwords. And I would like to replace the perplexity API in the knowledge tool with an open source alternative. As always, all the changes are being pushed through the development and testing branch first before I merge them into the main branch. So if you want to try these new features right away, go ahead and try the testing branch of the GitHub repo. To wrap it up, I would like to say a big thanks to all the amazing people in the community being formed around the Gendero. If you want to be a part of Agent Zero, you can join our Discord server, there's about a thousand people there already, or you can join the newly created school community. Both the links will be in the description below. Thank you and see you next time.