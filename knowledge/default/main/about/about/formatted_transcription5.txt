Hello guys, installation manual for Agent Zero has been long requested, so I'm happy to announce here it finally is in the GitHub repository, in the docs folder, in the installation, there is a very detailed step-by-step guide on how to install Agent Zero on both Windows and MacOS.

 There's also a link to this folder directly in the main readme file from the page of the repository. In this video I'll go through this guide step-by-step to make sure nothing is missing, so let's get into it. First of all, Agent Zero is not an app, it's a framework. It's made to be customized, edited, enhanced and therefore you need to install the necessary components to run it. So it's not something you can just download and run, you need to do something for it. But I will provide you with step-by-step instructions in this video on how to make Agent Zero work on Windows and MacOS.

 Some reminders before we start, you don't need to install Python because I will take care of that for you. You don't need any API keys to run Agent Zero, you can run Agent Zero with local models, but for this tutorial I will leave all the settings to default so I will use OpenAI API for the chat model and embedding model. I will make another video about how to setup Agent Zero for local models. You don't need visuals to do a quote or any other code editor, but it's easier to navigate and edit files if you have one. Docker is not mandatory, but running Agent Zero without Docker is actually more complicated and can be very dangerous, so I will not be covering that in this video, I will be showing you the easier and recommended way to do it with the Docker desktop application. Git or GitHub is not mandatory, you can download the framework files in browser. If you know how to use GitHub, you can clone the repository, I will be showing just how to download the files. The first thing we need is Konda, mini Konda, to be precise. Konda is a Python environment manager, it will help you keep your projects and installations separated. Full Konda has many more features, which you only need mini Konda. So Konda will help you keep your Python installations and package installations separated so you can create a virtual environment for every project. We will create one for Agent Zero to avoid collisions and compatibility issues. I have a Windows computer ready here. Let's continue on the Windows. The first step to install mini Konda is to go to the download page here and select the version for your operating system. There is just one version for Windows, on macOS you have to choose the version for your Apple Silicon or Intel chip and you want to download the version with the KG package at the end. This is a graphical installer. So let's download the one for Windows. And installing is very easy. You just have to click next next until the software is installed. Now I can close all of this. After the installation is complete, you should have Anaconda PowerShell prompt on your Windows, you type Anaconda in your start menu. You should see the Anaconda PowerShell prompt, which opens very many of these. On macOS the installer looks slightly different but it's essentially the same. You just click continue until the installation is done. After the installation you can verify the version by opening your terminal on macOS and typing Konda-dash. Version, which will show you the version of Konda installed and you can do this in the Anaconda PowerShell prompt on Windows. The next thing we need is Docker, preferably Docker desktop application for simplicity. And simply put Docker is a way of running virtual computers on your host machine. These virtual computers are lightweight, disposable and isolated from your operating system. So it is a way to send books in your agent zero. Agent zero only connects to the Docker container when it needs to execute code and commands. The framework itself will run on your machine in the Konda environment. Running agent zero without Docker is possible but more complicated and dangerous so I will not be covering that. And as I said Docker has a desktop application with Graphic User Interface for all major operating system so we will be using that one. Let's again download it for Windows. Here is the link. And here you can select your version. The button itself is a version for Intel and AMD chips. The first item in the drop down menu is for Windows ARM computers. Here you have Apple Silicon and Apple Intel chips. And here the installation is even more simple. You just leave it as it is, confirm it. And everything else will happen automatically. If you download the version for macOS, the installer is a disk image so you just drag and drop the application into the application folder. Once it's done you can close all of this again. And you should be able to find the Docker desktop application in your stop menu. The first time we run it we have to accept this. Select personal and login or create an account. It's for free but we need to have an account to be able to download images from the ground repository. Sometimes the login process can get stuck. It will open a browser window then redirected back to the application but it doesn't move anywhere. So you can skip the rest of it and login from here if you're logged in already. Now let's download the project itself. If you know how to use Git you can clone the repository yourself or you can go to releases page with the link here. And on the top of the list there is the latest release which you can download as a zip file using source code zip link here. Once it's downloaded I can extract this to my desktop for example and I'm going to rename it to just agent0 and I did exactly the same online mac machine. Now it's time to put the pieces together so we start by creating Condo virtual path in environment. I will open the Anaconda PowerShell prompt application on Windows and standard terminal on macOS.

 And following this guide we start by navigating the terminal into the folder where gyn0 is. So on Windows I will use the CD command with a path to my desktop folder and h0 subfolder. I can see that the folder has changed here and I will do the same on macOS but here. But this is slightly different. It's users my username that's the agent0 and I can see that I'm in the right folder here. Now we can create a new condo environment for this project. We can use this command. Here after the dash n is the name of the environment. I selected a0 agent0 for short but you can use any name you want. Here is the python version. Condo is going to install this python version for me so I don't need to have python installed on my machine and this will skip any unnecessary dialogues so I can just pop a paste, a man here. And also is the same macOS.

 Once the environment is created we want to activate it using Condo activate and the name of the environment. And you can see here on the left that the base environment has been changed to the new environment. And this is per window so if I open a new power shell prompt I am back in the base so this is something to keep in mind when you open a new terminal session you have to select the environment you want to work in. And this is exactly the same on macOS.

 I can see it here on the left as well. We're getting close to finish. Now we need to install all the required python packages into the condo environment which can be done with a single command because all the requirements are in the requirements.txt file inside the agent0 folder. With this command all the required packages will be installed. Again it's the same for windows and mac. This step might take a while so be patient. The installation is done so now I will just do a quick configuration and I can run agent0. In this case I will just provide the API key for open AI.

 As I said I will be leaving everything in the default configuration using open AI API for models. I will do another video on free and open source models. Let's open the project folder and we'll create this example of the nv file and edit this file. And this is where I will put my open AI API key. You can get your open AI API key on the dashboard and API keys you can create one. The API key will look something like this. This one is fake of course. You'll never want to show your API keys to anyone. Let's save the file and rename the example of the nv to just dot env. This is very important because only the dot env without anything before the period is a valid env file. On both windows and macOS you can encounter some problems when trying to rename the file to just dot env. The file can suddenly disappear because sometimes files starting with a period are being treated as hidden files so maybe you need to enable showing hidden files. And macOS by default you get an error because hidden files are reserved for the system. So you need to enable showing hidden files in the finder. Unfortunately the option is not here you have to do it with the keyboard shortcut which is command shift and period. Now is hidden files pop up and I can rename the dot the example dot env to dot env will just ask for confirmation. Another way to do this is to open the example dot env file in a text editor and use the file save us and save it as dot env in the simple folder. And optionally we can change the configuration and the initialize file. Here you can select models and agent configuration but I will not be doing it in this tutorial. Congratulations the setup is done let's just double check a few things before we start agent zero. So let's make sure that the environment is still active that we didn't open a new window or something and that the path is still set to the agent zero folder and that we have the talker desktop application running in the background. Here is and that we are logged in. Hey there's no need to do anything with the talker desktop the agent is going to set up the container on its own. So we can now run the python running line by script. This will start the web interface I can copy or control click this link and it will open a URL in the browser with agent zero web interface. So I can ask get time. This will require the agent to use the Docker container to execute code and get the current time. The first time the Docker image needs to be downloaded so this might take a while. Now I can see that the container has started. Code has been executed and now it needs to be respond. It works exactly the same on macOS.

 I run the python run you right by copy this URL into my browser. I can say the same to my macOS agent. And you can also use the command line interface if you prefer by running python run CLI.

py. There was an error in the version 6.1. I was showing in this tutorial but I will be sending version 6.2 along with this tutorial and video. So by the time you watch this it will be already fixed. So that's it. I hope you were able to follow along and make your agent zero work. In that case congratulations. I also hope it saved you some headache. In the next video I will be showing how to configure agent zero for free and open source models both with free apis remotely and locally with all our own elements studio etc. So see you next time.