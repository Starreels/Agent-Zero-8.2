Agent 0 version 0.7.1 is out and it contains some great quality of life improvements. You can find it in the GitHub repository under releases version 0.7.1. And the first thing you may notice is that they are now pre-installed binaries for macOS and Windows. When you download the zip and extract it, the folder structure looks like this. There is an executable agent 0 file and a folder called agent 0 files. Here is the original project structure. So all of the scripts, all of the prompts and all of the files are still editable. But now you don't need to deal with Python, Conda and requirements. You just run the executable. It will open your terminal and it will start the web UI right away. One important thing to mention here is that you still need to create your .env file containing your keys and settings. And you still need to have Docker or Docker desktop installed and running so that the agent can execute this code inside the Docker container. For more information about this, you can see the previous video, agent 0 installation guide, link will be in the description. The Docker image for code execution, which is downloaded by the agent automatically, has changed. If you still have the older version in your Docker desktop, you might want to delete this one and let agent 0 download the new version. Another thing you may have noticed is that my chat window started with existing chat. That is because conversations are now persistent. So I can start another chat. Have these two open and then kill the server and start it all over again. And my chats are still here. These are saved into folder called TMP chats and they are stored in an JSON format. They can also be downloaded from the browser and upload it again. This can help you repeat your scenarios, debug them, share them with others. And you can also edit these files and create synthetic scenarios. And once again, thanks to all the sunro, there is now a detailed documentation in the docs folder in the repository where you can find all sorts of information about installing and using agent 0. And you can also find this documentation in your downloaded project folder under docs in the background files. One last thing improved are these bear expressions that LLM like to use instead of printing the variable they just leave a standalone variable at the last line. Previously, this wasn't outputted so the agent couldn't see the output and couldn't continue. Now this is handled both in Python and Node.js, the agent gets the output and is capable of continuing. So that's it for today's updates. I believe this version will make your life a bit easier. If you want to join the community, you can do so on school or on discord. Both links will be in the description.